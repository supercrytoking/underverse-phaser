{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/scenes/MenuScene.ts","node_modules/phaser3-rex-plugins/plugins/utils/input/CursorKeys.js","node_modules/phaser3-rex-plugins/plugins/utils/math/RadToDeg.js","node_modules/phaser3-rex-plugins/plugins/utils/math/angle/angletodirections/Const.js","node_modules/phaser3-rex-plugins/plugins/utils/math/angle/angletodirections/AngleToDirections.js","node_modules/phaser3-rex-plugins/plugins/utils/input/VectorToCursorKeys.js","node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","node_modules/phaser3-rex-plugins/plugins/input/touchcursor/TouchCursor.js","node_modules/phaser3-rex-plugins/plugins/touchcursor.js","node_modules/phaser3-rex-plugins/plugins/input/virtualjoystick/VirtualJoyStick.js","node_modules/phaser3-rex-plugins/plugins/virtualjoystick.js","src/DigitalGamepad.ts","src/Utils.js","src/scenes/GameScene.ts","src/main.ts"],"names":["CursorKeys","Key","Phaser","Input","Keyboard","constructor","cursorKeys","up","down","left","right","noKeyDown","createCursorKeys","setKeyState","keyName","isDown","key","enabled","fakeEvent","timeDown","Date","now","onDown","onUp","clearAllKeysState","getKeyState","upKeyDown","downKeyDown","leftKeyDown","rightKeyDown","anyKeyDown","altKey","ctrlKey","shiftKey","metaKey","location","AngleToDirections","angle","dirMode","out","undefined","tmpOut","VectorToCursorKeys","GetValue","Utils","Objects","GetDist","Math","Distance","Between","GetAngle","Angle","config","resetFromJSON","o","start","end","setEnable","setMode","setDistanceThreshold","startX","startY","endX","endY","setVector","toJSON","enable","dir","forceMin","x","y","m","DIRMODE","e","clearVector","d","x0","y0","x1","y1","force","dirStates","forceX","forceY","rotation","octant","setEventEmitter","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","destroyEventEmitter","shutdown","getEventEmitter","on","apply","arguments","once","off","emit","event","addListener","removeListener","removeAllListeners","listenerCount","listeners","TouchCursor","CircleClass","Geom","Circle","CircleContains","Contains","gameObject","scene","radius","setInteractive","displayOriginX","displayOriginY","boot","pointer","onKeyDownStart","input","onKeyDown","onKeyUp","destroy","p0","p1","Object","assign","prototype","EventEmitterMethods","VirtualJoyStick","base","thumb","touchCursor","setRadius","addBase","addThumb","setPosition","setScrollFactor","noKey","pointerX","pointerY","setVisible","visible","toggleVisible","value","toggleEnabl","add","circle","setStrokeStyle","scrollFactor","update","rad","cos","sin","exports","addSpeechModal","string","inSpeech","screenWidth","game","renderer","width","screenHeight","height","margin","padding","fontSize","actionKey","keyboard","addKey","sound","play","volume","openSpeech","length","speechBox","rectangle","setOrigin","setDepth","setAlpha","speechBoxText","bitmapText","setMaxWidth","setFontSize","destroySpeech","shift"],"mappings":"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","file":"main.4cf301be.js","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: 'LOAD',\n        MENU: 'MENU',\n        GAME: 'GAME'\n    },\n    IMAGES: {\n        MENU_BG: 'menu-background.png',\n        LOGIN_BTN: 'login-button.png',\n        REGISTER_BTN: 'register-button.png',\n        SUPER_TILESET: 'super-tileset-extruded.png',\n        GAMEPAD_A: 'gamepad-a.png',\n        GAMEPAD_B: 'gamepad-b.png',\n        GAMEPAD_X: 'gamepad-x.png',\n        GAMEPAD_Y: 'gamepad-y.png'\n    },\n    AUDIO: {\n        MENU_MUSIC: 'menu-music.mp3',\n        CONFIRMATION_OO2: 'confirmation_002.mp3',\n        QUESTION_004: 'question_004.mp3'\n    }\n}","import { CST } from '../CST';\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'CST.SCENES.LOAD'\n        });\n    }\n\n    loadImages() {\n        this.load.setPath(`./assets/img`)\n        for (var i in CST.IMAGES) {\n            // console.log(`${i}, ${CST.IMAGES[i]}`);\n            this.load.image(i, CST.IMAGES[i]);\n        }\n    }\n\n    loadAudio() {\n        this.load.setPath(`./assets/audio`);\n        for (var i in CST.AUDIO) {\n            // console.log(`${i}, ${CST.AUDIO[i]}`);\n            this.load.audio(i, CST.AUDIO[i]);\n        }\n    }\n\n    loadSprites() {\n        this.load.setPath(`./assets/sprites`);\n        this.load.atlas('PLAYER_SPRITEZ' 'player-animated-sprites.png', 'player-animated-sprites.json');\n    }\n\n    loadFonts() {\n        this.load.setPath(`./assets/fonts`);\n        this.load.bitmapFont('FONT_PRIMARY', 'game-over.png', 'game-over.fnt');\n        // this.load.bitmapFont('FONT_PRIMARY', 'vcr-osd-mono.png', 'vcr-osd-mono.fnt');\n    }\n\n    preload() {\n        console.log('Loading...');\n\n        this.loadImages();\n        this.loadAudio();\n        this.loadSprites();\n        this.loadFonts();\n\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                color: 0x700000\n            }\n        });\n\n        this.load.on('progress', (percentage) => {\n            loadingBar.fillRect(0, 0, this.game.renderer.width * percentage, this.game.renderer.height)\n        });\n\n        this.load.on('complete', () => {\n            this.scene.start(CST.SCENES.MENU);\n            // this.scene.start(CST.SCENES.GAME);\n        });\n\n        this.load.on('load', (file: Phaser.Loader.File) => {\n            console.log(`Loaded ${file.key}.`);\n        });\n    }\n}","import { CST } from '../CST';\n\nexport class MenuScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.MENU\n        });\n    }\n    preload() {}\n    create() {\n        this.sound.play('MENU_MUSIC', {\n            loop: true\n        });\n\n        this.bg = this.add.image(0, 0, 'MENU_BG').setOrigin(0);\n        this.bg.alpha = 0.2;\n        this.bg.displayWidth = this.game.renderer.width;\n        this.bg.displayHeight = this.game.renderer.height;\n\n        let opacityTimer = setInterval(() => {\n            if (this.bg.alpha == 1) clearInterval(opacityTimer);\n            // console.log(`Menu opacity: ${this.bg.alpha}`);\n            this.bg.alpha = this.bg.alpha + 0.01\n        }, 300)\n\n        let loginButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height - 20, 'LOGIN_BTN').setOrigin(0.5, 1);\n        loginButton.setInteractive();\n        loginButton.on('pointerdown', () => {\n            this.scene.start(CST.SCENES.GAME);\n            this.sound.stopAll();\n        });\n\n        let registerButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height - 60, 'REGISTER_BTN').setOrigin(0.5, 1);\n        registerButton.setInteractive();\n        registerButton.on('pointerdown', () => {\n            this.scene.start(CST.SCENES.GAME);\n            this.sound.stopAll();\n        });\n    }\n}","const Key = Phaser.Input.Keyboard.Key;\r\n\r\nclass CursorKeys {\r\n    constructor() {\r\n        this.cursorKeys = {\r\n            up: new Key(),\r\n            down: new Key(),\r\n            left: new Key(),\r\n            right: new Key()\r\n        }\r\n        this.noKeyDown = true;\r\n    }\r\n\r\n    createCursorKeys() {\r\n        return this.cursorKeys;\r\n    }\r\n\r\n    setKeyState(keyName, isDown) {\r\n        var key = this.cursorKeys[keyName];\r\n\r\n        if (!key.enabled) {\r\n            return this;\r\n        }\r\n        if (isDown) {\r\n            this.noKeyDown = false;\r\n        }\r\n\r\n        if (key.isDown !== isDown) {\r\n            fakeEvent.timeDown = Date.now();\r\n            if (isDown) {\r\n                key.onDown(fakeEvent);\r\n            } else {\r\n                key.onUp(fakeEvent);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clearAllKeysState() {\r\n        this.noKeyDown = true;\r\n        for (var keyName in this.cursorKeys) {\r\n            this.setKeyState(keyName, false);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getKeyState(keyName) {\r\n        return this.cursorKeys[keyName];\r\n    }\r\n\r\n    get upKeyDown() {\r\n        return this.cursorKeys.up.isDown;\r\n    }\r\n\r\n    get downKeyDown() {\r\n        return this.cursorKeys.down.isDown;\r\n    }\r\n\r\n    get leftKeyDown() {\r\n        return this.cursorKeys.left.isDown;\r\n    }\r\n\r\n    get rightKeyDown() {\r\n        return this.cursorKeys.right.isDown;\r\n    }\r\n\r\n    get anyKeyDown() {\r\n        return !this.noKeyDown;\r\n    }\r\n}\r\n\r\nvar fakeEvent = {\r\n    altKey: false,\r\n    ctrlKey: false,\r\n    shiftKey: false,\r\n    metaKey: false,\r\n    location: 0,\r\n};\r\n\r\nexport default CursorKeys;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar RAD_TO_DEG = 180 / Math.PI;\r\n\r\n/**\r\n * Convert the given angle in radians, to the equivalent angle in degrees.\r\n *\r\n * @function Phaser.Math.RadToDeg\r\n * @since 3.0.0\r\n *\r\n * @param {number} radians - The angle in radians to convert ot degrees.\r\n *\r\n * @return {integer} The given angle converted to degrees.\r\n */\r\nvar RadToDeg = function (radians)\r\n{\r\n    return radians * RAD_TO_DEG;\r\n};\r\n\r\nmodule.exports = RadToDeg;\r\n","export default {\r\n    'up&down': 0,\r\n    'left&right': 1,\r\n    '4dir': 2,\r\n    '8dir': 3\r\n};","var AngleToDirections = function (angle, dirMode, out) {\r\n    if (out === undefined) {\r\n        out = {}\r\n    } else if (out === true) {\r\n        out = tmpOut;\r\n    }\r\n\r\n    out.left = false;\r\n    out.right = false;\r\n    out.up = false;\r\n    out.down = false;\r\n\r\n    angle = (angle + 360) % 360;\r\n    switch (dirMode) {\r\n        case 0: // up & down\r\n            if (angle < 180) {\r\n                out.down = true;\r\n            } else {\r\n                out.up = true;\r\n            }\r\n            break;\r\n\r\n        case 1: // left & right\r\n            if ((angle > 90) && (angle <= 270)) {\r\n                out.left = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n\r\n        case 2: // 4 dir\r\n            if ((angle > 45) && (angle <= 135)) {\r\n                out.down = true;\r\n            } else if ((angle > 135) && (angle <= 225)) {\r\n                out.left = true;\r\n            } else if ((angle > 225) && (angle <= 315)) {\r\n                out.up = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n\r\n        case 3: // 8 dir\r\n            if ((angle > 22.5) && (angle <= 67.5)) {\r\n                out.down = true;\r\n                out.right = true;\r\n            } else if ((angle > 67.5) && (angle <= 112.5)) {\r\n                out.down = true;\r\n            } else if ((angle > 112.5) && (angle <= 157.5)) {\r\n                out.down = true;\r\n                out.left = true;\r\n            } else if ((angle > 157.5) && (angle <= 202.5)) {\r\n                out.left = true;\r\n            } else if ((angle > 202.5) && (angle <= 247.5)) {\r\n                out.left = true;\r\n                out.up = true;\r\n            } else if ((angle > 247.5) && (angle <= 292.5)) {\r\n                out.up = true;\r\n            } else if ((angle > 292.5) && (angle <= 337.5)) {\r\n                out.up = true;\r\n                out.right = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar tmpOut = {};\r\n\r\nexport default AngleToDirections;","import CursorKeys from './CursorKeys.js';\r\nimport RadToDeg from '../math/RadToDeg.js';\r\nimport DIRMODE from '../math/angle/angletodirections/Const.js';\r\nimport AngleToDirections from '../math/angle/angletodirections/AngleToDirections.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst GetDist = Phaser.Math.Distance.Between;\r\nconst GetAngle = Phaser.Math.Angle.Between;\r\n\r\nclass VectorToCursorKeys extends CursorKeys {\r\n    constructor(config) {\r\n        super();\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        if (this.start == undefined) {\r\n            this.start = {};\r\n        }\r\n        if (this.end == undefined) {\r\n            this.end = {};\r\n        }\r\n        this.setEnable(GetValue(o, 'enable', true));\r\n        this.setMode(GetValue(o, 'dir', '8dir'));\r\n        this.setDistanceThreshold(GetValue(o, 'forceMin', 16));\r\n\r\n        var startX = GetValue(o, \"start.x\", null);\r\n        var startY = GetValue(o, \"start.y\", null);\r\n        var endX = GetValue(o, \"end.x\", null);\r\n        var endY = GetValue(o, \"end.y\", null);\r\n        this.setVector(startX, startY, endX, endY);\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            enable: this.enable,\r\n            dir: this.dirMode,\r\n            forceMin: this.forceMin,\r\n\r\n            start: {\r\n                x: this.start.x,\r\n                y: this.start.y\r\n            },\r\n            end: {\r\n                x: this.end.x,\r\n                y: this.end.y\r\n            }\r\n        };\r\n    }\r\n\r\n    setMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = DIRMODE[m];\r\n        }\r\n        this.dirMode = m;\r\n        return this;\r\n    }\r\n\r\n    setEnable(e) {\r\n        if (e == undefined) {\r\n            e = true;\r\n        } else {\r\n            e = !!e;\r\n        }\r\n        if (e === this.enable) {\r\n            return;\r\n        }\r\n        if (e === false) {\r\n            this.clearVector();\r\n        }\r\n        this.enable = e;\r\n        return this;\r\n    }\r\n\r\n    setDistanceThreshold(d) {\r\n        if (d < 0) {\r\n            d = 0;\r\n        }\r\n        this.forceMin = d;\r\n        return this;\r\n    }\r\n\r\n    clearVector() {\r\n        this.start.x = 0;\r\n        this.start.y = 0;\r\n        this.end.x = 0;\r\n        this.end.y = 0;\r\n        this.clearAllKeysState();\r\n        return this;\r\n    }\r\n\r\n    setVector(x0, y0, x1, y1) {\r\n        this.clearVector();\r\n        if (!this.enable) {\r\n            return this;\r\n        }\r\n        if (x0 === null) {\r\n            return this;\r\n        }\r\n\r\n        if (x1 === undefined) {\r\n            x1 = x0;\r\n            x0 = 0;\r\n            y1 = y0;\r\n            y0 = 0;\r\n        }\r\n        this.start.x = x0;\r\n        this.start.y = y0;\r\n        this.end.x = x1;\r\n        this.end.y = y1;\r\n        if ((this.forceMin > 0) && (this.force < this.forceMin)) {\r\n            return this;\r\n        }\r\n\r\n        var dirStates = AngleToDirections(this.angle, this.dirMode, true);\r\n        for (var dir in dirStates) {\r\n            if (dirStates[dir]) {\r\n                this.setKeyState(dir, true);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    get forceX() {\r\n        return this.end.x - this.start.x;\r\n    }\r\n\r\n    get forceY() {\r\n        return this.end.y - this.start.y;\r\n    }\r\n\r\n    get force() {\r\n        return GetDist(this.start.x, this.start.y, this.end.x, this.end.y);\r\n    }\r\n\r\n    get rotation() {\r\n        return GetAngle(this.start.x, this.start.y, this.end.x, this.end.y);\r\n    }\r\n\r\n    get angle() {\r\n        return RadToDeg(this.rotation); // -180 ~ 180\r\n    }\r\n\r\n    get octant() {\r\n        var octant = 0;\r\n        if (this.rightKeyDown) {\r\n            octant = (this.downKeyDown) ? 45 : 0;\r\n        } else if (this.downKeyDown) {\r\n            octant = (this.leftKeyDown) ? 135 : 90;\r\n        } else if (this.leftKeyDown) {\r\n            octant = (this.upKeyDown) ? 225 : 180;\r\n        } else if (this.upKeyDown) {\r\n            octant = (this.rightKeyDown) ? 315 : 270;\r\n        }\r\n        return octant;\r\n    }\r\n}\r\n\r\nexport default VectorToCursorKeys;","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","import VectorToCursorKeys from '../../utils/input/VectorToCursorKeys.js';\r\nimport EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst CircleClass = Phaser.Geom.Circle;\r\nconst CircleContains = Phaser.Geom.Circle.Contains;\r\n\r\nclass TouchCursor extends VectorToCursorKeys {\r\n    constructor(gameObject, config) {\r\n        super(config);\r\n        //this.resetFromJSON(config); // this function had been called in super(config)\r\n\r\n        // Event emitter\r\n        var eventEmitter = GetValue(config, 'eventEmitter', undefined);\r\n        var EventEmitterClass = GetValue(config, 'EventEmitterClass', undefined);\r\n        this.setEventEmitter(eventEmitter, EventEmitterClass);\r\n\r\n        this.scene = gameObject.scene;\r\n        this.gameObject = gameObject;\r\n        this.radius = GetValue(config, 'radius', 100);\r\n        gameObject.setInteractive(new CircleClass(gameObject.displayOriginX, gameObject.displayOriginY, this.radius), CircleContains);\r\n        this.boot();\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        super.resetFromJSON(o);\r\n        this.pointer = undefined;\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        var o = super.toJSON();\r\n        o.radius = this.radius;\r\n\r\n        return o;\r\n    }\r\n\r\n    boot() {\r\n        this.gameObject.on('pointerdown', this.onKeyDownStart, this);\r\n        this.gameObject.on('pointerover', this.onKeyDownStart, this);\r\n\r\n        this.scene.input.on('pointermove', this.onKeyDown, this);\r\n        this.scene.input.on('pointerup', this.onKeyUp, this);\r\n\r\n        this.gameObject.on('destroy', this.destroy, this);\r\n    }\r\n\r\n    shutdown() {\r\n        if (this.scene) {\r\n            this.scene.input.off('pointermove', this.onKeyDown, this);\r\n            this.scene.input.off('pointerup', this.onKeyUp, this);\r\n        }\r\n        // gameObject events will be removed when this gameObject destroyed \r\n\r\n        this.destroyEventEmitter();\r\n\r\n        this.pointer = undefined;\r\n        this.scene = undefined;\r\n        this.gameObject = undefined;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n    }\r\n\r\n    onKeyDownStart(pointer) {\r\n        if ((!pointer.isDown) ||\r\n            (this.pointer !== undefined)) {\r\n            return;\r\n        }\r\n        this.pointer = pointer;\r\n        this.onKeyDown(pointer);\r\n    }\r\n\r\n    onKeyDown(pointer) {\r\n        if (this.pointer !== pointer) {\r\n            return;\r\n        }\r\n\r\n        var p0 = this.gameObject,\r\n            p1 = pointer;\r\n        this.setVector(p0.x, p0.y, p1.x, p1.y);\r\n        this.emit('update');\r\n    }\r\n\r\n    onKeyUp(pointer) {\r\n        if (this.pointer !== pointer) {\r\n            return;\r\n        }\r\n        this.pointer = undefined;\r\n        this.clearVector();\r\n        this.emit('update');\r\n    }\r\n\r\n}\r\n\r\nObject.assign(\r\n    TouchCursor.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nexport default TouchCursor;","import TouchCursor from './input/touchcursor/TouchCursor.js';\r\nexport default TouchCursor;","import TouchCursor from '../../touchcursor.js';\r\nimport EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass VirtualJoyStick {\r\n    constructor(scene, config) {\r\n        if (config === undefined) {\r\n            config = {};\r\n        }\r\n\r\n        // Event emitter\r\n        var eventEmitter = GetValue(config, 'eventEmitter', undefined);\r\n        var EventEmitterClass = GetValue(config, 'EventEmitterClass', undefined);\r\n        this.setEventEmitter(eventEmitter, EventEmitterClass);\r\n        config.eventEmitter = this.getEventEmitter();\r\n\r\n        this.scene = scene;\r\n        this.base = undefined;\r\n        this.thumb = undefined;\r\n        this.touchCursor = undefined;\r\n        this.setRadius(GetValue(config, 'radius', 100));\r\n\r\n        this.addBase(GetValue(config, 'base', undefined), config);\r\n        this.addThumb(GetValue(config, 'thumb', undefined));\r\n\r\n        var x = GetValue(config, 'x', 0);\r\n        var y = GetValue(config, 'y', 0);\r\n        this.base.setPosition(x, y);\r\n        this.thumb.setPosition(x, y);\r\n\r\n        if (GetValue(config, 'fixed', true)) {\r\n            this.setScrollFactor(0);\r\n        }\r\n\r\n        this.boot();\r\n    }\r\n\r\n    destroy() {\r\n        this.destroyEventEmitter();\r\n        this.base.destroy(); // Also destroy touchCursor behavior\r\n        this.thumb.destroy();\r\n\r\n        this.base = undefined;\r\n        this.thumb = undefined;\r\n        this.touchCursor = undefined;\r\n    }\r\n\r\n    createCursorKeys() {\r\n        return this.touchCursor.createCursorKeys();\r\n    }\r\n\r\n    get forceX() {\r\n        return this.touchCursor.forceX;\r\n    }\r\n\r\n    get forceY() {\r\n        return this.touchCursor.forceY;\r\n    }\r\n\r\n    get force() {\r\n        return this.touchCursor.force;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.touchCursor.rotation;\r\n    }\r\n\r\n    get angle() {\r\n        return this.touchCursor.angle; // -180 ~ 180\r\n    }\r\n\r\n    get up() {\r\n        return this.touchCursor.upKeyDown;\r\n    }\r\n\r\n    get down() {\r\n        return this.touchCursor.downKeyDown;\r\n    }\r\n\r\n    get left() {\r\n        return this.touchCursor.leftKeyDown;\r\n    }\r\n\r\n    get right() {\r\n        return this.touchCursor.rightKeyDown;\r\n    }\r\n\r\n    get noKey() {\r\n        return this.touchCursor.noKeyDown;\r\n    }\r\n\r\n    get pointerX() {\r\n        return this.touchCursor.end.x;\r\n    }\r\n\r\n    get pointerY() {\r\n        return this.touchCursor.end.y;\r\n    }\r\n\r\n    get pointer() {\r\n        return this.touchCursor.pointer;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    set x(x) {\r\n        this.base.x = x;\r\n    }\r\n\r\n    set y(y) {\r\n        this.base.y = y;\r\n    }\r\n\r\n    get x() {\r\n        return this.base.x;\r\n    }\r\n\r\n    get y() {\r\n        return this.base.y;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.visible = visible;\r\n    }\r\n\r\n    toggleVisible() {\r\n        this.visible = !this.visible;\r\n    }\r\n\r\n    get visible() {\r\n        return this.base.visible;\r\n    }\r\n\r\n    set visible(visible) {\r\n        this.base.visible = visible;\r\n        this.thumb.visible = visible;\r\n    }\r\n\r\n    setEnable(value) {\r\n        this.enable = value;\r\n        return this;\r\n    }\r\n\r\n    toggleEnabl() {\r\n        this.enable = !this.enable;\r\n    }\r\n\r\n    get enable() {\r\n        return this.touchCursor.enable;\r\n    }\r\n\r\n    set enable(value) {\r\n        this.touchCursor.setEnable(value);\r\n    }\r\n\r\n    setRadius(radius) {\r\n        this.radius = radius;\r\n        return this;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.visible = visible;\r\n        return this;\r\n    }\r\n\r\n    addBase(gameObject, config) {\r\n        if (this.base) {\r\n            this.base.destroy();\r\n            // Also destroy touchCursor behavior\r\n        }\r\n\r\n        if (gameObject === undefined) {\r\n            gameObject = this.scene.add.circle(0, 0, this.radius)\r\n                .setStrokeStyle(3, 0x0000ff);\r\n        }\r\n\r\n        this.touchCursor = new TouchCursor(gameObject, config)\r\n        this.base = gameObject;\r\n        return this;\r\n    }\r\n\r\n    addThumb(gameObject) {\r\n        if (this.thumb) {\r\n            this.thumb.destroy();\r\n        }\r\n\r\n        if (gameObject === undefined) {\r\n            gameObject = this.scene.add.circle(0, 0, 40)\r\n                .setStrokeStyle(3, 0x00ff00);\r\n        }\r\n        this.thumb = gameObject;\r\n        return this;\r\n    }\r\n\r\n    setScrollFactor(scrollFactor) {\r\n        this.base.setScrollFactor(scrollFactor);\r\n        this.thumb.setScrollFactor(scrollFactor);\r\n    }\r\n\r\n    boot() {\r\n        this.touchCursor.on('update', this.update, this);\r\n    }\r\n\r\n    update() {\r\n        var touchCursor = this.touchCursor;\r\n        if (touchCursor.anyKeyDown) {\r\n            if (touchCursor.force > this.radius) {\r\n                var rad = touchCursor.rotation;\r\n                this.thumb.x = touchCursor.start.x + (Math.cos(rad) * this.radius);\r\n                this.thumb.y = touchCursor.start.y + (Math.sin(rad) * this.radius);\r\n            } else {\r\n                this.thumb.x = touchCursor.end.x;\r\n                this.thumb.y = touchCursor.end.y;\r\n            }\r\n        } else {\r\n            this.thumb.x = this.base.x;\r\n            this.thumb.y = this.base.y;\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n}\r\n\r\nObject.assign(\r\n    VirtualJoyStick.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nexport default VirtualJoyStick;","import VirtualJoyStick from './input/virtualjoystick/VirtualJoyStick.js';\r\nexport default VirtualJoyStick;","export class DigitalGamepad {\n    constructor(scene) {\n        this.scene = scene;\n        this.buttonPadding = 40;\n        this.buttonMargin = 80;\n        this.buttonSize = 80;\n\n        if (scene.game.renderer.width <= 600) {\n            this.buttonPadding = 40;\n            this.buttonMargin = 40;\n            this.buttonSize = 40;\n        }\n    }\n\n    load() {\n        this.aButton = this.scene.add.sprite(this.scene.game.renderer.width - this.buttonPadding - this.buttonMargin, this.scene.game.renderer.height - this.buttonPadding, 'GAMEPAD_A').setDepth(4).setOrigin(1, 1);\n        this.aButton.setDisplaySize(this.buttonSize, this.buttonSize);\n        this.aButton.setScrollFactor(0);\n        this.aButton.setInteractive();\n\n        this.bButton = this.scene.add.sprite(this.scene.game.renderer.width - this.buttonPadding, this.scene.game.renderer.height - this.buttonPadding - this.buttonMargin, 'GAMEPAD_B').setDepth(4).setOrigin(1, 1);\n        this.bButton.setDisplaySize(this.buttonSize, this.buttonSize);\n        this.bButton.setScrollFactor(0);\n        this.bButton.setInteractive();\n    }\n    \n    get size() {\n        return this.buttonSize;\n    }\n\n    set size(x) {\n        this.buttonSize = x;\n    }\n}","exports.addSpeechModal = (scene, string) => {\n    if (scene.inSpeech) return;\n    scene.inSpeech = true;\n\n    var screenWidth = scene.game.renderer.width;\n    var screenHeight = scene.game.renderer.height;\n\n    var height = screenHeight / 4;\n    var margin = 50;\n    var padding = 20;\n    var fontSize = 75;\n\n    var actionKey = scene.input.keyboard.addKey('Q');\n\n    if (screenWidth <= 600) {\n        margin = 20;\n        padding = 10;\n        fontSize = 50;\n    }\n\n    scene.sound.play('CONFIRMATION_OO2', {volume: 0.01});\n\n    var openSpeech = (string) => {\n        if (!string.length) {\n            scene.inSpeech = false;\n            return;\n        }\n        var speechBox = scene.add.rectangle(margin, screenHeight - margin, screenWidth - (margin * 2), height, 0x000000).setOrigin(0, 1).setDepth(10).setScrollFactor(0).setAlpha(0.5);\n        var speechBoxText = scene.add.bitmapText(margin + padding, screenHeight - height - margin + padding, 'FONT_PRIMARY', string[0]).setDepth(10).setMaxWidth(screenWidth - 120).setFontSize(fontSize).setScrollFactor(0);\n        speechBox.setInteractive();\n\n        var destroySpeech = () => {\n            scene.sound.play('QUESTION_004', {volume: 0.01});\n            speechBox.destroy();\n            speechBoxText.destroy();\n\n            if (string.length) {\n                string.shift();\n                openSpeech(string);\n            }\n        }\n\n        speechBox.on('pointerdown', () => {\n            destroySpeech();\n        });\n        actionKey.once('down', () => {\n            destroySpeech();\n        });\n    }\n    openSpeech(string);\n}","import { CST } from '../CST';\n\nimport VirtualJoystick from 'phaser3-rex-plugins/plugins/virtualjoystick.js';\nimport { DigitalGamepad } from '../DigitalGamepad';\n\nconst Utils = require('../Utils');\n\nexport class GameScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.GAME\n        });\n    }\n    preload() {\n        this.load.tilemapTiledJSON('map', './assets/maps/sammoland.json');\n\n        this.anims.create({\n            key: 'PLAYER_ANIMATION',\n            frameRate: 10,\n            frames: this.anims.generateFrameNames('PLAYER_SPRITEZ', {\n                prefix: 'player-',\n                start: 1,\n                end: 41,\n                suffix: '.png'\n            }),\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'PLAYER_ANIMATION_NORTH',\n            frameRate: 10,\n            frames: this.anims.generateFrameNames('PLAYER_SPRITEZ', {\n                prefix: 'player-',\n                start: 1,\n                end: 41,\n                suffix: '.png',\n                frames: [1, 2, 3, 4, 5, 6, 7, 8]\n            }),\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'PLAYER_ANIMATION_SOUTH',\n            frameRate: 10,\n            frames: this.anims.generateFrameNames('PLAYER_SPRITEZ', {\n                prefix: 'player-',\n                start: 1,\n                end: 41,\n                suffix: '.png',\n                frames: [22, 23, 24, 25, 26, 27, 28, 29]\n            }),\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'PLAYER_ANIMATION_EAST',\n            frameRate: 20,\n            frames: this.anims.generateFrameNames('PLAYER_SPRITEZ', {\n                prefix: 'player-',\n                start: 1,\n                end: 41,\n                suffix: '.png',\n                frames: [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n            }),\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'PLAYER_ANIMATION_WEST',\n            frameRate: 20,\n            frames: this.anims.generateFrameNames('PLAYER_SPRITEZ', {\n                prefix: 'player-',\n                start: 1,\n                end: 41,\n                suffix: '.png',\n                frames: [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]\n            }),\n            repeat: -1\n        });\n    }\n\n    inSpeech = false;\n\n    create = () => {\n        // Utils.loadGamepad(this);\n        // Utils.addSpeechModal(this, ['Nice, it works!', `When you get close and press Q, I'll talk to you.`]);\n\n        var gamepad = new DigitalGamepad(this);\n        gamepad.load();\n\n        gamepad.aButton.on('pointerdown', () => {\n            if (Phaser.Math.Distance.Between(this.player.x, this.player.y, this.npc.x, this.npc.y) < 50) {\n                console.log('CLOSE!')\n                Utils.addSpeechModal(this, ['Nice, it works!', `When you get close and press Q, I'll talk to you.`]);\n            } else {\n                console.log('FAR!');\n            }\n        });\n\n        // Create Joystick\n        var joystickBase = this.add.circle(0, 0, 50, 0xFFFFFF, 0.1).setDepth(10);\n        var joystickThumb = this.add.circle(0, 0, 25, 0xFFFFFF, 0.1).setDepth(10);\n\n        this.joystick = new VirtualJoystick(this, {\n            x: 200,\n            y: 200,\n            radius: 50,\n            base: joystickBase,\n            thumb: joystickThumb,\n            // dir: '8dir',\n            // forceMin: 16,\n            // fixed: true,\n            enable: false\n        });\n\n        let joystickMoved = 0;\n        this.joystick.on('update', () => {\n            if (this.joystick.force >= 200) {\n                joystickMoved++;\n                this.joystick.x = this.joystick.pointerX;\n                this.joystick.y = this.joystick.pointerY;\n            }\n\n            if (joystickMoved >= 1) {\n                this.speed = 240;\n                joystickBase.fillColor = 0xFF0000;\n            } else {\n                this.speed = 120;\n            }\n        });\n\n        var joystickArea = this.add.rectangle(0, 0, window.innerWidth / 2, window.innerHeight, 0xFF0000, 0).setScrollFactor(0).setDepth(4).setOrigin(0, 0);\n        joystickArea.setInteractive()\n\n        joystickArea.on('pointerdown', (pointer) => {\n            // Enable joystick on clickdown.\n            this.joystick.x = pointer.x;\n            this.joystick.y = pointer.y;\n            this.joystick.enable = true;\n        });\n\n        this.input.on('pointerup', (pointer) => {\n            // Disable joystick on clickup.\n            this.stopMovement();\n            // this.joystick.enable = false;\n            joystickMoved = 0;\n            joystickBase.fillColor = 0xFFFFFF;\n        })\n\n        // Create a map, terrain, and layers.\n        let map = this.add.tilemap('map');\n        let tileset = map.addTilesetImage('super-tileset', 'SUPER_TILESET', 32, 32, 1, 2);\n\n        let floorLayer = map.createDynamicLayer('FloorLayer', [tileset], 0, 0);\n        let grassLayer = map.createDynamicLayer('GrassLayer', [tileset], 0, 0);\n        let layerTwo = map.createDynamicLayer('LayerTwo', [tileset], 0, 0).setDepth(2);\n\n        // Create the player.\n        const spawnPoint = map.findObject(\"Objects\", obj => obj.name === \"Spawn\");\n        this.player = this.physics.add.sprite(map.tileToWorldX(22), map.tileToWorldY(72), 'PLAYER_SPRITEZ', 'player-20.png').setDepth(2);\n        // this.player = this.physics.add.sprite(spawnPoint.x + (Math.random() * 100), spawnPoint.y + (Math.random() * 100), 'PLAYER_SPRITEZ', 'player-20.png').setDepth(2);\n        // this.player = this.physics.add.sprite(100, 100, 'PLAYER_SPRITEZ', 'player-20.png').setDepth(2);\n        this.player.body.setSize(this.player.body.width * 0.6, this.player.body.height * 0.6, true);\n        this.player.body.setOffset(this.player.body.width * 0.4, this.player.body.height * 0.6, true);\n        this.player.setScale(2);\n\n        this.npc = this.physics.add.sprite(map.tileToWorldX(20), map.tileToWorldY(72), 'PLAYER_SPRITEZ');\n        this.physics.add.collider(this.player, this.npc);\n        this.npc.setImmovable(true);\n\n        // Enabled colliding with objects in the top layer where collides = true.\n        this.physics.add.collider(this.player, layerTwo);\n        layerTwo.setCollisionByProperty({ collides: true })\n\n        // Lock the camera and set the bounds.\n        this.player.body.collideWorldBounds = true;\n        this.cameras.main.startFollow(this.player, true, 0.05, 0.05);\n        this.cameras.main.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n        this.physics.world.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n\n        // Keyboard handling...\n        this.keyboard = this.input.keyboard.addKeys('W, S, A, D');\n\n        for (var i in this.keyboard) {\n            eval(`this.keyboard.${i}`).on('up', (e) => {\n                this.stopMovement();\n            });\n        }\n\n        var actionKey = this.input.keyboard.addKey('Q');\n        actionKey.on('down', (e) => {\n            if (Phaser.Math.Distance.Between(this.player.x, this.player.y, this.npc.x, this.npc.y) < 50) {\n                console.log('CLOSE!')\n                Utils.addSpeechModal(this, ['Nice, it works!', `When you get close and press Q, I'll talk to you.`]);\n            } else {\n                console.log('FAR!');\n            }\n        });\n\n        this.speed = 120;\n        var shiftKey = this.input.keyboard.addKey('SHIFT');\n        shiftKey.on('down', (event) => {\n            this.speed = 240;\n        });\n        shiftKey.on('up', (event) => {\n            this.speed = 120;\n        });\n        var tabKey = this.input.keyboard.addKey('TAB');\n        tabKey.on('down', (event) => {\n            this.speed = 540;\n        });\n        tabKey.on('up', (event) => {\n            this.speed = 120;\n        });\n    }\n\n    moveNorth = () => {\n        this.player.body.velocity.y = -Math.abs(this.speed);\n        this.player.play('PLAYER_ANIMATION_NORTH', true);\n    }\n    moveSouth = () => {\n        this.player.body.velocity.y = this.speed;\n        this.player.play('PLAYER_ANIMATION_SOUTH', true);\n    }\n    moveWest = () => {\n        this.player.body.velocity.x = -Math.abs(this.speed);\n        this.player.play('PLAYER_ANIMATION_WEST', true);\n    }\n    \n    moveEast = () => {\n        this.player.body.velocity.x = this.speed;\n        this.player.play('PLAYER_ANIMATION_EAST', true);\n    }\n\n    stopMovement = () => {\n        this.player.anims.stop();\n        this.player.body.velocity.x = 0;\n        this.player.body.velocity.y = 0;\n        // this.speed = 120;\n    }\n\n    update(time, delta) {\n        // WSAD movement.\n        if (this.keyboard.W.isDown) {\n            this.moveNorth();\n        }\n        if (this.keyboard.S.isDown) {\n            this.moveSouth();\n        }\n        if (this.keyboard.A.isDown) {\n            this.moveWest();\n        }\n        if (this.keyboard.D.isDown) {\n            this.moveEast();\n        }\n\n        if (this.joystick.up) {\n            this.moveNorth();\n        }\n        if (this.joystick.down) {\n            this.moveSouth();\n        }\n        if (this.joystick.left) {\n            this.moveWest();\n        }\n        if (this.joystick.right) {\n            this.moveEast();\n        }\n\n        if (this.inSpeech) {\n            this.stopMovement();\n        }\n\n        this.player.body.velocity.normalize().scale(this.speed);\n    }\n}","import { LoadScene } from './scenes/LoadScene';\nimport { MenuScene } from './scenes/MenuScene';\nimport { GameScene } from './scenes/GameScene';\n\nvar config = {\n    type: Phaser.CANVAS,\n    scale: {\n        // mode: Phaser.Scale.FIT,\n        width: window.innerWidth,\n        height: window.innerHeight\n    },\n    scene: [\n        LoadScene, MenuScene, GameScene\n    ],\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { y: 0 },\n            debug: true\n        }\n    }\n}\n\nlet game = new Phaser.Game(config);\n\nwindow.addEventListener('resize', function (event) {\n    game.scale.resize(window.innerWidth, window.innerHeight);\n}, false);"]}